#+TITLE: bashconfig
#+DESCRIPTION: my bash config
#+AUTHOR: Felix Dumbeck
#+PROPERTY: header-args :bash :tangle .bashrc :results silent :mkdirp yes
#+auto_tangle: t

* preface

this bash config uses =bash-complete= and has no further requirements. The contents of the code blocks will be tangled to =~/.bashrc= and =~/.profile=.

* profile
to load env variables to the login shell rather then just the active shell
*** editor
#+begin_src bash :tangle .profile
  if [ -z "$(which emacs)" ] ; then
      export EDITOR=$(which emacs)
  fi
#+end_src
*** programming
#+begin_src bash :tangle .profile
  if [ -z "$(which sccache)" ] ; then
      export RUSTC_WRAPPER=sccache
  fi
  if [ -d "/usr/lib/jvm/default" ] ; then
      export JAVA_HOME=/usr/lib/jvm/default
  fi
  if [ -z "$(which gem)" ] ; then
      export GEM_HOME="$(gem env user_gemhome)"
  fi
#+end_src
*** format
set locale format to =en_us utf-8=
#+begin_src bash
  export LC_CTYPE=en_US.UTF-8
#+end_src
*** path
#+begin_src bash :tangle .profile
  if [ -d "$HOME/.emacs.d/bin" ] ; then
      export PATH="$HOME/.emacs.d/bin:$PATH"
  fi
  if [ -d "$HOME/.local/bin" ] ; then
      export PATH="$PATH:$HOME/.local/bin"
  fi
  if [ -d "$GEM_HOME/bin" ] ; then
      export PATH="$PATH:$GEM_HOME/bin"
  fi
#+end_src
* bashrc
** aliases
because the aliases are used in the rest of the config they are first
*** emacs
#+begin_src bash
  alias em='/usr/bin/emacs -nw'
#+end_src
*** typos

automatically correct common typos I make

#+begin_src bash
  alias celar='clear'
  alias lcear='clear'
  alias lcear='clear'
  alias clea='clear'
  alias cleat='clear'
#+end_src
*** pacman

shorten my most used =pacman= commands
+ =pac=: install and update
+ =pacr=: remove
+ =paci=: info
+ =pacq=: query for matching packages
+ =cleanup=: remove orphaned packages

#+begin_src bash
  alias pac='sudo pacman -Syu'
  alias pacr='sudo pacman -Rs'
  alias paci='pacman -Si'
  alias pacq='pacman -Qs'
  alias cleanup='sudo pacman -Rns $(pacman -Qtdq)'
#+end_src
*** ssh

remember my ssh-keys during a session

#+begin_src bash
  eval $(ssh-agent) > /dev/null
#+end_src
*** build stuff
**** cmake

clear build directory and build with debug flags enabled

#+begin_src bash
  alias build='rm -rf build && cmake -B build -DCMAKE_BUILD_TYPE=Debug -DCMAKE_EXPORT_COMPILE_COMMANDS=1 && make -C'
#+end_src
**** gcc

=comp= compiles gcc code for optimal debugging, bug reduction and security

#+begin_src bash
  alias comp='gcc -std=c17 -Wall -Wextra -fstack-protector -g3 -lm'
#+end_src
*** =b= for =cd ..=
=b= to go back one directory
#+begin_src bash
  alias b='cd ..'
#+end_src
*** ls
#+begin_src bash
  alias ls='ls --color=auto'
  alias la='ls -a --color=auto'
  alias ll='ls -lagh --color=auto'
#+end_src
*** grep
#+begin_src bash
  #alias grep='rg'
  alias grep='grep --color=auto'
#+end_src
*** extract
usage: ex <file>
#+begin_src bash
  ex ()
  {
    if [ -f "$1" ] ; then
      case $1 in
        ,*.tar.bz2)   tar xjf $1   ;;
        ,*.tar.gz)    tar xzf $1   ;;
        ,*.bz2)       bunzip2 $1   ;;
        ,*.rar)       unrar x $1   ;;
        ,*.gz)        gunzip $1    ;;
        ,*.tar)       tar xf $1    ;;
        ,*.tbz2)      tar xjf $1   ;;
        ,*.tgz)       tar xzf $1   ;;
        ,*.zip)       unzip $1     ;;
        ,*.Z)         uncompress $1;;
        ,*.7z)        7z x $1      ;;
        ,*.deb)       ar x $1      ;;
        ,*.tar.xz)    tar xf $1    ;;
        ,*.tar.zst)   unzstd $1    ;;
        ,*)           echo "'$1' cannot be extracted via ex()" ;;
      esac
    else
      echo "'$1' is not a valid file"
    fi
  }
#+end_src

** general
*** set color
#+begin_src bash
  export TERM="xterm-256color"
#+end_src
*** command not found
requires pkgfile
run ~pkgfile -u~ to update package index
#+begin_src bash
  source /usr/share/doc/pkgfile/command-not-found.bash
#+end_src
*** history
#+begin_src bash :tangle .bashrc
  export HISTCONTROL=erasedups:ignorenoth
#+end_src
*** history-completion
tangle to =.inputrc= for other read-line programs
#+begin_src bash 
  bind '"\e[A": history-search-backward'
  bind '"\e[B": history-search-forward'
  #bind '"^[^M-f": history-search-backward'
  #bind '"\e\C-m": history-search-forward'
#+end_src
*** auto-completion
#+begin_src bash :tangle no
  [[ $PS1 && -f /usr/share/bash-completion/bash_completion ]] && \
    . /usr/share/bash-completion/bash_completion
#+end_src
**** enable completion for aliases
#+begin_src bash
  source /usr/share/bash-complete-alias/complete_alias
  complete -F _complete_alias "${!BASH_ALIASES[@]}"
#+end_src
*** ignore case on auto completion
#+begin_src bash :tangle .bashrc
  bind "set completion-ignore-case on"
#+end_src
*** shopt
#+begin_src bash :tangle .bashrc
  shopt -s autocd # change to named directory
  shopt -s cdspell # autocorrects cd misspellings
  shopt -s cmdhist # save multi-line commands in history as single line
  shopt -s dotglob
  shopt -s histappend # do not overwrite history
  shopt -s expand_aliases # expand aliases
  shopt -s checkwinsize # checks term size when bash regains control
#+end_src
*** starship prompt
#+begin_src bash :tangle .bashrc
  eval "$(starship init bash)"
#+end_src

* look into
+ [[https://github.com/ajeetdsouza/zoxide][GitHub - ajeetdsouza/zoxide: A smarter cd command. Supports all major shells.]]
